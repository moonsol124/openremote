name: CI/CD Pipeline for VM Deployment

on:
  push:
    branches:
      - master  # You can replace 'main' with your desired branch name

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code
      - name: Checkout code 
        uses: actions/checkout@v2

      # Set up SSH for accessing the VM
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with: 
          ssh-private-key: ${{ secrets.OPENREMOTESECRET }}
         
      # - name: Install Node.js
      #   run: |
      #     curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      #     sudo apt-get install -y nodejs
      #     node -v
      #     npm -v

      # Deploy to VM (replace with your own deploy script)
      - name: Deploy to VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.IP }} 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash && 
          \. "$HOME/.nvm/nvm.sh" && dir && cd s6/openremote && git fetch --all &&
          nvm install 23 &&
          node -v &&
          nvm current &&
          npm -v && 
          git reset --hard origin/master && 
          git pull && 
          docker ps -q | grep . && docker stop $(docker ps -q) || echo "No running containers to stop" &&
          docker ps -aq | grep . && docker rm $(docker ps -aq) || echo "No containers to remove" &&

          PORT=9000
          if lsof -i :$PORT -t > /dev/null; then
            echo "Port $PORT is in use. Stopping process..."
            kill -9 $(lsof -i :$PORT -t)
            
            # Wait until the process is fully stopped
            while lsof -i :$PORT -t > /dev/null; do
              echo "Waiting for port $PORT to be free..."
              sleep 1
            done
            echo "Port $PORT is now free."
          else
            echo "Port $PORT is not in use."
          fi

          echo "Starting docker-compose..."
          OR_HOSTNAME=13.74.121.139 docker-compose -f profile/dev-ui.yml up -d

          # Wait for all containers to be fully up and healthy
          echo "Waiting for all containers to be fully started..."
          while [[ $(docker-compose -f profile/dev-ui.yml ps --services --filter "status=running" | wc -l) -lt $(docker-compose -f profile/dev-ui.yml ps --services | wc -l) ]]; do
            echo "Waiting for containers..."
            sleep 5
          done

          echo "All containers are up and running."
          echo "Will cd to ui/app/manager.." && 
          cd ui/app/manager &&
          echo "will run serve."
          setsid npm run serve -- --env managerUrl=http://13.74.121.139:8080 > output.log 2>&1 & exit 0'

#ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.IP }} 'dir && cd s6/openremote && git fetch --all && git reset --hard origin/master && git pull && cd ui/app/manager && docker ps && nohup npm run serve -- --env managerUrl={{ secrets.IP }}:8080 &> output.log &'
#npm run serve -- --env managerUrl={{ secrets.IP }}:8080
#OR_HOSTNAME=13.74.121.139 docker-compose -f profile/dev-ui.yml up -d &&
          